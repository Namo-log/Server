plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
    id "org.sonarqube" version "5.0.0.4638"
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        }
    }

    dependencies {
        // lombok
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar.enabled = false
    jar.enabled = true

    test {
        useJUnitPlatform {
            excludeTags('develop')
        }
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        description = 'Run unit tests'

        useJUnitPlatform {
            excludeTags('develop', 'context')
        }
    }

    tasks.register('contextTest', Test) {
        group = 'verification'
        description = 'Run context tests'

        useJUnitPlatform {
            includeTags('context')
        }
    }

    tasks.register('developTest', Test) {
        group = 'verification'
        description = 'Run develop tests'

        useJUnitPlatform {
            includeTags('develop')
        }
    }

    clean {
        delete file('src/main/generated')
    }

    bootJar {
        layered {
            application {
                intoLayer("spring-boot-loader") {
                    include "org/springframework/boot/loader/**"
                }
                intoLayer("application")
            }
            dependencies {
                intoLayer("application") {
                    includeProjectDependencies()
                }
                intoLayer("snapshot-dependencies") {
                    include "*:*:*SNAPSHOT"
                }
                intoLayer("dependencies")
            }
            layerOrder = ["dependencies", "spring-boot-loader", "snapshot-dependencies", "application"]
        }
    }
}

